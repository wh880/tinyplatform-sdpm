/**
 *  Copyright (c) 1997-2013, www.tinygroup.org (luo_guo@icloud.com).
 *
 *  Licensed under the GPL, Version 3.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *       http://www.gnu.org/licenses/gpl.html
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

package org.tinygroup.sdpm.quality.impl;

import static org.tinygroup.tinysqldsl.base.StatementSqlBuilder.and;
import static org.tinygroup.sdpm.quality.constant.TestCaseTable.*;
import static org.tinygroup.tinysqldsl.Select.*;
import static org.tinygroup.tinysqldsl.Insert.*;
import static org.tinygroup.tinysqldsl.Delete.*;
import static org.tinygroup.tinysqldsl.Update.*;

import java.io.Serializable;

import java.util.List;

import org.tinygroup.tinysqldsl.Delete;
import org.tinygroup.tinysqldsl.Insert;
import org.tinygroup.tinysqldsl.Select;
import org.tinygroup.tinysqldsl.Update;
import org.tinygroup.tinysqldsl.Pager;
import org.tinygroup.commons.tools.CollectionUtil;
import org.tinygroup.tinysqldsl.expression.JdbcNamedParameter;
import org.tinygroup.tinysqldsl.extend.MysqlSelect;
import org.tinygroup.sdpm.quality.pojo.TestCase;
import org.tinygroup.sdpm.quality.inter.TestCaseDao;
import org.tinygroup.jdbctemplatedslsession.daosupport.TinyDslDaoSupport;

import org.tinygroup.jdbctemplatedslsession.callback.DeleteGenerateCallback;
import org.tinygroup.jdbctemplatedslsession.callback.InsertGenerateCallback;
import org.tinygroup.jdbctemplatedslsession.callback.NoParamDeleteGenerateCallback;
import org.tinygroup.jdbctemplatedslsession.callback.NoParamInsertGenerateCallback;
import org.tinygroup.jdbctemplatedslsession.callback.NoParamUpdateGenerateCallback;
import org.tinygroup.jdbctemplatedslsession.callback.SelectGenerateCallback;
import org.tinygroup.jdbctemplatedslsession.callback.UpdateGenerateCallback;

public class TestCaseDaoImpl extends TinyDslDaoSupport implements TestCaseDao {

	public TestCase insertObject(TestCase testCase) {
		return getDslTemplate().insertObject(testCase, new InsertGenerateCallback<TestCase>() {
			public Insert generate(TestCase t) {
				Insert insert = insertInto(TESTCASETABLE).values(
					TESTCASETABLE.CASE_ID.value(t.getCaseId()),
					TESTCASETABLE.COMPANY_ID.value(t.getCompanyId()),
					TESTCASETABLE.PRODUCT_ID.value(t.getProductId()),
					TESTCASETABLE.STORY_ID.value(t.getStoryId()),
					TESTCASETABLE.STORY_VERSION.value(t.getStoryVersion()),
					TESTCASETABLE.MODULE_ID.value(t.getModuleId()),
					TESTCASETABLE.CASE_TITLE.value(t.getCaseTitle()),
					TESTCASETABLE.CASE_PRECONDITION.value(t.getCasePrecondition()),
					TESTCASETABLE.CASE_KEYWORDS.value(t.getCaseKeywords()),
					TESTCASETABLE.CASE_PRI.value(t.getCasePri()),
					TESTCASETABLE.CASE_TYPE.value(t.getCaseType()),
					TESTCASETABLE.CASE_STAGE.value(t.getCaseStage()),
					TESTCASETABLE.CASE_STATUS.value(t.getCaseStatus()),
					TESTCASETABLE.CASE_RUN.value(t.getCaseRun()),
					TESTCASETABLE.CASE_ORDER.value(t.getCaseOrder()),
					TESTCASETABLE.CASE_VERSION.value(t.getCaseVersion()),
					TESTCASETABLE.LINKCASE_ID.value(t.getLinkcaseId()),
					TESTCASETABLE.FROM_BUG_ID.value(t.getFromBugId()),
					TESTCASETABLE.CASE_OPENED_BY.value(t.getCaseOpenedBy()),
					TESTCASETABLE.CASE_OPENED_DATE.value(t.getCaseOpenedDate()),
					TESTCASETABLE.CASE_LAST_EDITED_BY.value(t.getCaseLastEditedBy()),
					TESTCASETABLE.CASE_LAST_EDITED_DATE.value(t.getCaseLastEditedDate()),
					TESTCASETABLE.CASE_LAST_RUNNER.value(t.getCaseLastRunner()),
					TESTCASETABLE.CASE_LAST_RUN_DATE.value(t.getCaseLastRunDate()),
					TESTCASETABLE.CASE_LAST_RUN_RESULT.value(t.getCaseLastRunResult()),
					TESTCASETABLE.DELETED.value(t.getDeleted()));
				return insert;
			}
		});
	}

	public TestCase insertObject(boolean autoGeneratedKeys ,TestCase testCase) {
		return getDslTemplate().insertObjectAndReturnKey(autoGeneratedKeys ,testCase, new InsertGenerateCallback<TestCase>() {

			public Insert generate(TestCase t) {
				Insert insert = insertInto(TESTCASETABLE).values(
					TESTCASETABLE.CASE_ID.value(t.getCaseId()),
					TESTCASETABLE.COMPANY_ID.value(t.getCompanyId()),
					TESTCASETABLE.PRODUCT_ID.value(t.getProductId()),
					TESTCASETABLE.STORY_ID.value(t.getStoryId()),
					TESTCASETABLE.STORY_VERSION.value(t.getStoryVersion()),
					TESTCASETABLE.MODULE_ID.value(t.getModuleId()),
					TESTCASETABLE.CASE_TITLE.value(t.getCaseTitle()),
					TESTCASETABLE.CASE_PRECONDITION.value(t.getCasePrecondition()),
					TESTCASETABLE.CASE_KEYWORDS.value(t.getCaseKeywords()),
					TESTCASETABLE.CASE_PRI.value(t.getCasePri()),
					TESTCASETABLE.CASE_TYPE.value(t.getCaseType()),
					TESTCASETABLE.CASE_STAGE.value(t.getCaseStage()),
					TESTCASETABLE.CASE_STATUS.value(t.getCaseStatus()),
					TESTCASETABLE.CASE_RUN.value(t.getCaseRun()),
					TESTCASETABLE.CASE_ORDER.value(t.getCaseOrder()),
					TESTCASETABLE.CASE_VERSION.value(t.getCaseVersion()),
					TESTCASETABLE.LINKCASE_ID.value(t.getLinkcaseId()),
					TESTCASETABLE.FROM_BUG_ID.value(t.getFromBugId()),
					TESTCASETABLE.CASE_OPENED_BY.value(t.getCaseOpenedBy()),
					TESTCASETABLE.CASE_OPENED_DATE.value(t.getCaseOpenedDate()),
					TESTCASETABLE.CASE_LAST_EDITED_BY.value(t.getCaseLastEditedBy()),
					TESTCASETABLE.CASE_LAST_EDITED_DATE.value(t.getCaseLastEditedDate()),
					TESTCASETABLE.CASE_LAST_RUNNER.value(t.getCaseLastRunner()),
					TESTCASETABLE.CASE_LAST_RUN_DATE.value(t.getCaseLastRunDate()),
					TESTCASETABLE.CASE_LAST_RUN_RESULT.value(t.getCaseLastRunResult()),
					TESTCASETABLE.DELETED.value(t.getDeleted()));
				return insert;
			}
		});
	}

	public int updateObject(TestCase testCase) {
		return getDslTemplate().updateObject(testCase, new UpdateGenerateCallback<TestCase>() {
			public Update generate(TestCase t) {
				Update update = update(TESTCASETABLE).set(
					TESTCASETABLE.COMPANY_ID.value(t.getCompanyId()),
					TESTCASETABLE.PRODUCT_ID.value(t.getProductId()),
					TESTCASETABLE.STORY_ID.value(t.getStoryId()),
					TESTCASETABLE.STORY_VERSION.value(t.getStoryVersion()),
					TESTCASETABLE.MODULE_ID.value(t.getModuleId()),
					TESTCASETABLE.CASE_TITLE.value(t.getCaseTitle()),
					TESTCASETABLE.CASE_PRECONDITION.value(t.getCasePrecondition()),
					TESTCASETABLE.CASE_KEYWORDS.value(t.getCaseKeywords()),
					TESTCASETABLE.CASE_PRI.value(t.getCasePri()),
					TESTCASETABLE.CASE_TYPE.value(t.getCaseType()),
					TESTCASETABLE.CASE_STAGE.value(t.getCaseStage()),
					TESTCASETABLE.CASE_STATUS.value(t.getCaseStatus()),
					TESTCASETABLE.CASE_RUN.value(t.getCaseRun()),
					TESTCASETABLE.CASE_ORDER.value(t.getCaseOrder()),
					TESTCASETABLE.CASE_VERSION.value(t.getCaseVersion()),
					TESTCASETABLE.LINKCASE_ID.value(t.getLinkcaseId()),
					TESTCASETABLE.FROM_BUG_ID.value(t.getFromBugId()),
					TESTCASETABLE.CASE_OPENED_BY.value(t.getCaseOpenedBy()),
					TESTCASETABLE.CASE_OPENED_DATE.value(t.getCaseOpenedDate()),
					TESTCASETABLE.CASE_LAST_EDITED_BY.value(t.getCaseLastEditedBy()),
					TESTCASETABLE.CASE_LAST_EDITED_DATE.value(t.getCaseLastEditedDate()),
					TESTCASETABLE.CASE_LAST_RUNNER.value(t.getCaseLastRunner()),
					TESTCASETABLE.CASE_LAST_RUN_DATE.value(t.getCaseLastRunDate()),
					TESTCASETABLE.CASE_LAST_RUN_RESULT.value(t.getCaseLastRunResult()),
					TESTCASETABLE.DELETED.value(t.getDeleted())).where(
					TESTCASETABLE.CASE_ID.eq(t.getCaseId()));
				return update;
			}
		});
	}

	public int deleteObject(Serializable pk){
		return getDslTemplate().deleteObject(pk, new DeleteGenerateCallback<Serializable>() {
			public Delete generate(Serializable pk) {
				return delete(TESTCASETABLE).where(TESTCASETABLE.CASE_ID.eq(pk));
			}
		});
	}

	public int deleteObjects(Serializable... pks) {
		return getDslTemplate().deleteObjects(new DeleteGenerateCallback<Serializable[]>() {
			public Delete generate(Serializable[] t) {
				return delete(TESTCASETABLE).where(TESTCASETABLE.CASE_ID.in(t));
		}
		},pks);
	}

	public TestCase getObjectById(Serializable pk) {
		return getDslTemplate().getObjectById(pk, TestCase.class, new SelectGenerateCallback<Serializable>() {
		@SuppressWarnings("rawtypes")
		public Select generate(Serializable t) {
			return selectFrom(TESTCASETABLE).where(TESTCASETABLE.CASE_ID.eq(t));
			}
		});
	}

	public List<TestCase> queryObjects(TestCase testCase) {
		if(testCase==null){
			testCase=new TestCase();
		}
		return getDslTemplate().queryObjects(testCase, new SelectGenerateCallback<TestCase>() {

			@SuppressWarnings("rawtypes")
			public Select generate(TestCase t) {
				return selectFrom(TESTCASETABLE).where(
				and(
					TESTCASETABLE.COMPANY_ID.eq(t.getCompanyId()),
					TESTCASETABLE.PRODUCT_ID.eq(t.getProductId()),
					TESTCASETABLE.STORY_ID.eq(t.getStoryId()),
					TESTCASETABLE.STORY_VERSION.eq(t.getStoryVersion()),
					TESTCASETABLE.MODULE_ID.eq(t.getModuleId()),
					TESTCASETABLE.CASE_TITLE.eq(t.getCaseTitle()),
					TESTCASETABLE.CASE_PRECONDITION.eq(t.getCasePrecondition()),
					TESTCASETABLE.CASE_KEYWORDS.eq(t.getCaseKeywords()),
					TESTCASETABLE.CASE_PRI.eq(t.getCasePri()),
					TESTCASETABLE.CASE_TYPE.eq(t.getCaseType()),
					TESTCASETABLE.CASE_STAGE.eq(t.getCaseStage()),
					TESTCASETABLE.CASE_STATUS.eq(t.getCaseStatus()),
					TESTCASETABLE.CASE_RUN.eq(t.getCaseRun()),
					TESTCASETABLE.CASE_ORDER.eq(t.getCaseOrder()),
					TESTCASETABLE.CASE_VERSION.eq(t.getCaseVersion()),
					TESTCASETABLE.LINKCASE_ID.eq(t.getLinkcaseId()),
					TESTCASETABLE.FROM_BUG_ID.eq(t.getFromBugId()),
					TESTCASETABLE.CASE_OPENED_BY.eq(t.getCaseOpenedBy()),
					TESTCASETABLE.CASE_OPENED_DATE.eq(t.getCaseOpenedDate()),
					TESTCASETABLE.CASE_LAST_EDITED_BY.eq(t.getCaseLastEditedBy()),
					TESTCASETABLE.CASE_LAST_EDITED_DATE.eq(t.getCaseLastEditedDate()),
					TESTCASETABLE.CASE_LAST_RUNNER.eq(t.getCaseLastRunner()),
					TESTCASETABLE.CASE_LAST_RUN_DATE.eq(t.getCaseLastRunDate()),
					TESTCASETABLE.CASE_LAST_RUN_RESULT.eq(t.getCaseLastRunResult()),
					TESTCASETABLE.DELETED.eq(t.getDeleted())));
			}
		});
	}

	public Pager<TestCase> queryObjectsForPage(int start,int limit ,TestCase testCase) {
		if(testCase==null){
			testCase=new TestCase();
		}
		return getDslTemplate().queryObjectsForPage(start, limit, testCase, false, new SelectGenerateCallback<TestCase>() {

			public Select generate(TestCase t) {
				return MysqlSelect.selectFrom(TESTCASETABLE).where(
				and(
					TESTCASETABLE.COMPANY_ID.eq(t.getCompanyId()),
					TESTCASETABLE.PRODUCT_ID.eq(t.getProductId()),
					TESTCASETABLE.STORY_ID.eq(t.getStoryId()),
					TESTCASETABLE.STORY_VERSION.eq(t.getStoryVersion()),
					TESTCASETABLE.MODULE_ID.eq(t.getModuleId()),
					TESTCASETABLE.CASE_TITLE.eq(t.getCaseTitle()),
					TESTCASETABLE.CASE_PRECONDITION.eq(t.getCasePrecondition()),
					TESTCASETABLE.CASE_KEYWORDS.eq(t.getCaseKeywords()),
					TESTCASETABLE.CASE_PRI.eq(t.getCasePri()),
					TESTCASETABLE.CASE_TYPE.eq(t.getCaseType()),
					TESTCASETABLE.CASE_STAGE.eq(t.getCaseStage()),
					TESTCASETABLE.CASE_STATUS.eq(t.getCaseStatus()),
					TESTCASETABLE.CASE_RUN.eq(t.getCaseRun()),
					TESTCASETABLE.CASE_ORDER.eq(t.getCaseOrder()),
					TESTCASETABLE.CASE_VERSION.eq(t.getCaseVersion()),
					TESTCASETABLE.LINKCASE_ID.eq(t.getLinkcaseId()),
					TESTCASETABLE.FROM_BUG_ID.eq(t.getFromBugId()),
					TESTCASETABLE.CASE_OPENED_BY.eq(t.getCaseOpenedBy()),
					TESTCASETABLE.CASE_OPENED_DATE.eq(t.getCaseOpenedDate()),
					TESTCASETABLE.CASE_LAST_EDITED_BY.eq(t.getCaseLastEditedBy()),
					TESTCASETABLE.CASE_LAST_EDITED_DATE.eq(t.getCaseLastEditedDate()),
					TESTCASETABLE.CASE_LAST_RUNNER.eq(t.getCaseLastRunner()),
					TESTCASETABLE.CASE_LAST_RUN_DATE.eq(t.getCaseLastRunDate()),
					TESTCASETABLE.CASE_LAST_RUN_RESULT.eq(t.getCaseLastRunResult()),
					TESTCASETABLE.DELETED.eq(t.getDeleted())));
			}
		});
	}

	public int[] batchInsert(boolean autoGeneratedKeys ,List<TestCase> testCases) {
		if (CollectionUtil.isEmpty(testCases)) {
			return new int[0];
		}
		return getDslTemplate().batchInsert(autoGeneratedKeys, testCases, new NoParamInsertGenerateCallback() {

			public Insert generate() {
				return insertInto(TESTCASETABLE).values(
					TESTCASETABLE.COMPANY_ID.value(new JdbcNamedParameter("companyId")),
					TESTCASETABLE.PRODUCT_ID.value(new JdbcNamedParameter("productId")),
					TESTCASETABLE.STORY_ID.value(new JdbcNamedParameter("storyId")),
					TESTCASETABLE.STORY_VERSION.value(new JdbcNamedParameter("storyVersion")),
					TESTCASETABLE.MODULE_ID.value(new JdbcNamedParameter("moduleId")),
					TESTCASETABLE.CASE_TITLE.value(new JdbcNamedParameter("caseTitle")),
					TESTCASETABLE.CASE_PRECONDITION.value(new JdbcNamedParameter("casePrecondition")),
					TESTCASETABLE.CASE_KEYWORDS.value(new JdbcNamedParameter("caseKeywords")),
					TESTCASETABLE.CASE_PRI.value(new JdbcNamedParameter("casePri")),
					TESTCASETABLE.CASE_TYPE.value(new JdbcNamedParameter("caseType")),
					TESTCASETABLE.CASE_STAGE.value(new JdbcNamedParameter("caseStage")),
					TESTCASETABLE.CASE_STATUS.value(new JdbcNamedParameter("caseStatus")),
					TESTCASETABLE.CASE_RUN.value(new JdbcNamedParameter("caseRun")),
					TESTCASETABLE.CASE_ORDER.value(new JdbcNamedParameter("caseOrder")),
					TESTCASETABLE.CASE_VERSION.value(new JdbcNamedParameter("caseVersion")),
					TESTCASETABLE.LINKCASE_ID.value(new JdbcNamedParameter("linkcaseId")),
					TESTCASETABLE.FROM_BUG_ID.value(new JdbcNamedParameter("fromBugId")),
					TESTCASETABLE.CASE_OPENED_BY.value(new JdbcNamedParameter("caseOpenedBy")),
					TESTCASETABLE.CASE_OPENED_DATE.value(new JdbcNamedParameter("caseOpenedDate")),
					TESTCASETABLE.CASE_LAST_EDITED_BY.value(new JdbcNamedParameter("caseLastEditedBy")),
					TESTCASETABLE.CASE_LAST_EDITED_DATE.value(new JdbcNamedParameter("caseLastEditedDate")),
					TESTCASETABLE.CASE_LAST_RUNNER.value(new JdbcNamedParameter("caseLastRunner")),
					TESTCASETABLE.CASE_LAST_RUN_DATE.value(new JdbcNamedParameter("caseLastRunDate")),
					TESTCASETABLE.CASE_LAST_RUN_RESULT.value(new JdbcNamedParameter("caseLastRunResult")),
					TESTCASETABLE.DELETED.value(new JdbcNamedParameter("deleted")));
			}
		});
	}

	public int[] batchInsert(List<TestCase> testCases){
			return batchInsert(true ,testCases);
	}

	public int[] batchUpdate(List<TestCase> testCases) {
		if (CollectionUtil.isEmpty(testCases)) {
			return new int[0];
		}
		return getDslTemplate().batchUpdate(testCases, new NoParamUpdateGenerateCallback() {

			public Update generate() {
				return update(TESTCASETABLE).set(
					TESTCASETABLE.COMPANY_ID.value(new JdbcNamedParameter("companyId")),
					TESTCASETABLE.PRODUCT_ID.value(new JdbcNamedParameter("productId")),
					TESTCASETABLE.STORY_ID.value(new JdbcNamedParameter("storyId")),
					TESTCASETABLE.STORY_VERSION.value(new JdbcNamedParameter("storyVersion")),
					TESTCASETABLE.MODULE_ID.value(new JdbcNamedParameter("moduleId")),
					TESTCASETABLE.CASE_TITLE.value(new JdbcNamedParameter("caseTitle")),
					TESTCASETABLE.CASE_PRECONDITION.value(new JdbcNamedParameter("casePrecondition")),
					TESTCASETABLE.CASE_KEYWORDS.value(new JdbcNamedParameter("caseKeywords")),
					TESTCASETABLE.CASE_PRI.value(new JdbcNamedParameter("casePri")),
					TESTCASETABLE.CASE_TYPE.value(new JdbcNamedParameter("caseType")),
					TESTCASETABLE.CASE_STAGE.value(new JdbcNamedParameter("caseStage")),
					TESTCASETABLE.CASE_STATUS.value(new JdbcNamedParameter("caseStatus")),
					TESTCASETABLE.CASE_RUN.value(new JdbcNamedParameter("caseRun")),
					TESTCASETABLE.CASE_ORDER.value(new JdbcNamedParameter("caseOrder")),
					TESTCASETABLE.CASE_VERSION.value(new JdbcNamedParameter("caseVersion")),
					TESTCASETABLE.LINKCASE_ID.value(new JdbcNamedParameter("linkcaseId")),
					TESTCASETABLE.FROM_BUG_ID.value(new JdbcNamedParameter("fromBugId")),
					TESTCASETABLE.CASE_OPENED_BY.value(new JdbcNamedParameter("caseOpenedBy")),
					TESTCASETABLE.CASE_OPENED_DATE.value(new JdbcNamedParameter("caseOpenedDate")),
					TESTCASETABLE.CASE_LAST_EDITED_BY.value(new JdbcNamedParameter("caseLastEditedBy")),
					TESTCASETABLE.CASE_LAST_EDITED_DATE.value(new JdbcNamedParameter("caseLastEditedDate")),
					TESTCASETABLE.CASE_LAST_RUNNER.value(new JdbcNamedParameter("caseLastRunner")),
					TESTCASETABLE.CASE_LAST_RUN_DATE.value(new JdbcNamedParameter("caseLastRunDate")),
					TESTCASETABLE.CASE_LAST_RUN_RESULT.value(new JdbcNamedParameter("caseLastRunResult")),
					TESTCASETABLE.DELETED.value(new JdbcNamedParameter("deleted"))).where(
				TESTCASETABLE.CASE_ID.eq(new JdbcNamedParameter("caseId")));
			}
		});
	}

	public int[] batchDelete(List<TestCase> testCases) {
		if (CollectionUtil.isEmpty(testCases)) {
			return new int[0];
		}
		return getDslTemplate().batchDelete(testCases, new NoParamDeleteGenerateCallback() {

			public Delete generate() {
				return delete(TESTCASETABLE).where(and(
				TESTCASETABLE.CASE_ID.eq(new JdbcNamedParameter("caseId")),
				TESTCASETABLE.COMPANY_ID.eq(new JdbcNamedParameter("companyId")),
				TESTCASETABLE.PRODUCT_ID.eq(new JdbcNamedParameter("productId")),
				TESTCASETABLE.STORY_ID.eq(new JdbcNamedParameter("storyId")),
				TESTCASETABLE.STORY_VERSION.eq(new JdbcNamedParameter("storyVersion")),
				TESTCASETABLE.MODULE_ID.eq(new JdbcNamedParameter("moduleId")),
				TESTCASETABLE.CASE_TITLE.eq(new JdbcNamedParameter("caseTitle")),
				TESTCASETABLE.CASE_PRECONDITION.eq(new JdbcNamedParameter("casePrecondition")),
				TESTCASETABLE.CASE_KEYWORDS.eq(new JdbcNamedParameter("caseKeywords")),
				TESTCASETABLE.CASE_PRI.eq(new JdbcNamedParameter("casePri")),
				TESTCASETABLE.CASE_TYPE.eq(new JdbcNamedParameter("caseType")),
				TESTCASETABLE.CASE_STAGE.eq(new JdbcNamedParameter("caseStage")),
				TESTCASETABLE.CASE_STATUS.eq(new JdbcNamedParameter("caseStatus")),
				TESTCASETABLE.CASE_RUN.eq(new JdbcNamedParameter("caseRun")),
				TESTCASETABLE.CASE_ORDER.eq(new JdbcNamedParameter("caseOrder")),
				TESTCASETABLE.CASE_VERSION.eq(new JdbcNamedParameter("caseVersion")),
				TESTCASETABLE.LINKCASE_ID.eq(new JdbcNamedParameter("linkcaseId")),
				TESTCASETABLE.FROM_BUG_ID.eq(new JdbcNamedParameter("fromBugId")),
				TESTCASETABLE.CASE_OPENED_BY.eq(new JdbcNamedParameter("caseOpenedBy")),
				TESTCASETABLE.CASE_OPENED_DATE.eq(new JdbcNamedParameter("caseOpenedDate")),
				TESTCASETABLE.CASE_LAST_EDITED_BY.eq(new JdbcNamedParameter("caseLastEditedBy")),
				TESTCASETABLE.CASE_LAST_EDITED_DATE.eq(new JdbcNamedParameter("caseLastEditedDate")),
				TESTCASETABLE.CASE_LAST_RUNNER.eq(new JdbcNamedParameter("caseLastRunner")),
				TESTCASETABLE.CASE_LAST_RUN_DATE.eq(new JdbcNamedParameter("caseLastRunDate")),
				TESTCASETABLE.CASE_LAST_RUN_RESULT.eq(new JdbcNamedParameter("caseLastRunResult")),
				TESTCASETABLE.DELETED.eq(new JdbcNamedParameter("deleted"))));
			}
		});
	}

}
