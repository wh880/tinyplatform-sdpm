/**
 *  Copyright (c) 1997-2013, www.tinygroup.org (luo_guo@icloud.com).
 *
 *  Licensed under the GPL, Version 3.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *       http://www.gnu.org/licenses/gpl.html
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

package org.tinygroup.sdpm.service.impl;

import static org.tinygroup.tinysqldsl.base.StatementSqlBuilder.and;
import static org.tinygroup.sdpm.service.constant.ProductReleaseTable.*;
import static org.tinygroup.tinysqldsl.Select.*;
import static org.tinygroup.tinysqldsl.Insert.*;
import static org.tinygroup.tinysqldsl.Delete.*;
import static org.tinygroup.tinysqldsl.Update.*;

import java.io.Serializable;

import java.util.List;

import org.tinygroup.tinysqldsl.Delete;
import org.tinygroup.tinysqldsl.Insert;
import org.tinygroup.tinysqldsl.Select;
import org.tinygroup.tinysqldsl.Update;
import org.tinygroup.tinysqldsl.Pager;
import org.tinygroup.commons.tools.CollectionUtil;
import org.tinygroup.tinysqldsl.expression.JdbcNamedParameter;
import org.tinygroup.tinysqldsl.extend.MysqlSelect;
import org.tinygroup.sdpm.service.pojo.ProductRelease;
import org.tinygroup.sdpm.service.inter.ProductReleaseDao;
import org.tinygroup.jdbctemplatedslsession.daosupport.TinyDslDaoSupport;

import org.tinygroup.jdbctemplatedslsession.callback.DeleteGenerateCallback;
import org.tinygroup.jdbctemplatedslsession.callback.InsertGenerateCallback;
import org.tinygroup.jdbctemplatedslsession.callback.NoParamDeleteGenerateCallback;
import org.tinygroup.jdbctemplatedslsession.callback.NoParamInsertGenerateCallback;
import org.tinygroup.jdbctemplatedslsession.callback.NoParamUpdateGenerateCallback;
import org.tinygroup.jdbctemplatedslsession.callback.SelectGenerateCallback;
import org.tinygroup.jdbctemplatedslsession.callback.UpdateGenerateCallback;

public class ProductReleaseDaoImpl extends TinyDslDaoSupport implements ProductReleaseDao {

	public ProductRelease insertObject(ProductRelease productRelease) {
		return getDslTemplate().insertObject(productRelease, new InsertGenerateCallback<ProductRelease>() {
			public Insert generate(ProductRelease t) {
				Insert insert = insertInto(PRODUCTRELEASETABLE).values(
					PRODUCTRELEASETABLE.RELEASE_ID.value(t.getReleaseId()),
					PRODUCTRELEASETABLE.COMPANY_ID.value(t.getCompanyId()),
					PRODUCTRELEASETABLE.PRODUCT_ID.value(t.getProductId()),
					PRODUCTRELEASETABLE.RELEASE_NAME.value(t.getReleaseName()),
					PRODUCTRELEASETABLE.RELEASE_TYPE.value(t.getReleaseType()),
					PRODUCTRELEASETABLE.PLAN_ID.value(t.getPlanId()),
					PRODUCTRELEASETABLE.RELEASE_MAIL_TO.value(t.getReleaseMailTo()),
					PRODUCTRELEASETABLE.RELEASE_MAIL_C_C.value(t.getReleaseMailCC()),
					PRODUCTRELEASETABLE.RELEASE_MAIL_B_C.value(t.getReleaseMailBC()),
					PRODUCTRELEASETABLE.RELEASE_CONTENT.value(t.getReleaseContent()),
					PRODUCTRELEASETABLE.RELEASE_REQUEST.value(t.getReleaseRequest()),
					PRODUCTRELEASETABLE.RELEASE_CREATE_BY.value(t.getReleaseCreateBy()),
					PRODUCTRELEASETABLE.RELEASE_CREATE_DATE.value(t.getReleaseCreateDate()),
					PRODUCTRELEASETABLE.RELEASE_PUBLISHER.value(t.getReleasePublisher()),
					PRODUCTRELEASETABLE.RELEASE_PUBLISH_DATE.value(t.getReleasePublishDate()),
					PRODUCTRELEASETABLE.RELEASE_SPOT_TEST.value(t.getReleaseSpotTest()),
					PRODUCTRELEASETABLE.RELEASE_PATH.value(t.getReleasePath()),
					PRODUCTRELEASETABLE.DELETED.value(t.getDeleted()));
				return insert;
			}
		});
	}

	public ProductRelease insertObject(boolean autoGeneratedKeys ,ProductRelease productRelease) {
		return getDslTemplate().insertObjectAndReturnKey(autoGeneratedKeys ,productRelease, new InsertGenerateCallback<ProductRelease>() {

			public Insert generate(ProductRelease t) {
				Insert insert = insertInto(PRODUCTRELEASETABLE).values(
					PRODUCTRELEASETABLE.RELEASE_ID.value(t.getReleaseId()),
					PRODUCTRELEASETABLE.COMPANY_ID.value(t.getCompanyId()),
					PRODUCTRELEASETABLE.PRODUCT_ID.value(t.getProductId()),
					PRODUCTRELEASETABLE.RELEASE_NAME.value(t.getReleaseName()),
					PRODUCTRELEASETABLE.RELEASE_TYPE.value(t.getReleaseType()),
					PRODUCTRELEASETABLE.PLAN_ID.value(t.getPlanId()),
					PRODUCTRELEASETABLE.RELEASE_MAIL_TO.value(t.getReleaseMailTo()),
					PRODUCTRELEASETABLE.RELEASE_MAIL_C_C.value(t.getReleaseMailCC()),
					PRODUCTRELEASETABLE.RELEASE_MAIL_B_C.value(t.getReleaseMailBC()),
					PRODUCTRELEASETABLE.RELEASE_CONTENT.value(t.getReleaseContent()),
					PRODUCTRELEASETABLE.RELEASE_REQUEST.value(t.getReleaseRequest()),
					PRODUCTRELEASETABLE.RELEASE_CREATE_BY.value(t.getReleaseCreateBy()),
					PRODUCTRELEASETABLE.RELEASE_CREATE_DATE.value(t.getReleaseCreateDate()),
					PRODUCTRELEASETABLE.RELEASE_PUBLISHER.value(t.getReleasePublisher()),
					PRODUCTRELEASETABLE.RELEASE_PUBLISH_DATE.value(t.getReleasePublishDate()),
					PRODUCTRELEASETABLE.RELEASE_SPOT_TEST.value(t.getReleaseSpotTest()),
					PRODUCTRELEASETABLE.RELEASE_PATH.value(t.getReleasePath()),
					PRODUCTRELEASETABLE.DELETED.value(t.getDeleted()));
				return insert;
			}
		});
	}

	public int updateObject(ProductRelease productRelease) {
		return getDslTemplate().updateObject(productRelease, new UpdateGenerateCallback<ProductRelease>() {
			public Update generate(ProductRelease t) {
				Update update = update(PRODUCTRELEASETABLE).set(
					PRODUCTRELEASETABLE.COMPANY_ID.value(t.getCompanyId()),
					PRODUCTRELEASETABLE.PRODUCT_ID.value(t.getProductId()),
					PRODUCTRELEASETABLE.RELEASE_NAME.value(t.getReleaseName()),
					PRODUCTRELEASETABLE.RELEASE_TYPE.value(t.getReleaseType()),
					PRODUCTRELEASETABLE.PLAN_ID.value(t.getPlanId()),
					PRODUCTRELEASETABLE.RELEASE_MAIL_TO.value(t.getReleaseMailTo()),
					PRODUCTRELEASETABLE.RELEASE_MAIL_C_C.value(t.getReleaseMailCC()),
					PRODUCTRELEASETABLE.RELEASE_MAIL_B_C.value(t.getReleaseMailBC()),
					PRODUCTRELEASETABLE.RELEASE_CONTENT.value(t.getReleaseContent()),
					PRODUCTRELEASETABLE.RELEASE_REQUEST.value(t.getReleaseRequest()),
					PRODUCTRELEASETABLE.RELEASE_CREATE_BY.value(t.getReleaseCreateBy()),
					PRODUCTRELEASETABLE.RELEASE_CREATE_DATE.value(t.getReleaseCreateDate()),
					PRODUCTRELEASETABLE.RELEASE_PUBLISHER.value(t.getReleasePublisher()),
					PRODUCTRELEASETABLE.RELEASE_PUBLISH_DATE.value(t.getReleasePublishDate()),
					PRODUCTRELEASETABLE.RELEASE_SPOT_TEST.value(t.getReleaseSpotTest()),
					PRODUCTRELEASETABLE.RELEASE_PATH.value(t.getReleasePath()),
					PRODUCTRELEASETABLE.DELETED.value(t.getDeleted())).where(
					PRODUCTRELEASETABLE.RELEASE_ID.eq(t.getReleaseId()));
				return update;
			}
		});
	}

	public int deleteObject(Serializable pk){
		return getDslTemplate().deleteObject(pk, new DeleteGenerateCallback<Serializable>() {
			public Delete generate(Serializable pk) {
				return delete(PRODUCTRELEASETABLE).where(PRODUCTRELEASETABLE.RELEASE_ID.eq(pk));
			}
		});
	}

	public int deleteObjects(Serializable... pks) {
		return getDslTemplate().deleteObjects(new DeleteGenerateCallback<Serializable[]>() {
			public Delete generate(Serializable[] t) {
				return delete(PRODUCTRELEASETABLE).where(PRODUCTRELEASETABLE.RELEASE_ID.in(t));
		}
		},pks);
	}

	public ProductRelease getObjectById(Serializable pk) {
		return getDslTemplate().getObjectById(pk, ProductRelease.class, new SelectGenerateCallback<Serializable>() {
		@SuppressWarnings("rawtypes")
		public Select generate(Serializable t) {
			return selectFrom(PRODUCTRELEASETABLE).where(PRODUCTRELEASETABLE.RELEASE_ID.eq(t));
			}
		});
	}

	public List<ProductRelease> queryObjects(ProductRelease productRelease) {
		if(productRelease==null){
			productRelease=new ProductRelease();
		}
		return getDslTemplate().queryObjects(productRelease, new SelectGenerateCallback<ProductRelease>() {

			@SuppressWarnings("rawtypes")
			public Select generate(ProductRelease t) {
				return selectFrom(PRODUCTRELEASETABLE).where(
				and(
					PRODUCTRELEASETABLE.COMPANY_ID.eq(t.getCompanyId()),
					PRODUCTRELEASETABLE.PRODUCT_ID.eq(t.getProductId()),
					PRODUCTRELEASETABLE.RELEASE_NAME.eq(t.getReleaseName()),
					PRODUCTRELEASETABLE.RELEASE_TYPE.eq(t.getReleaseType()),
					PRODUCTRELEASETABLE.PLAN_ID.eq(t.getPlanId()),
					PRODUCTRELEASETABLE.RELEASE_MAIL_TO.eq(t.getReleaseMailTo()),
					PRODUCTRELEASETABLE.RELEASE_MAIL_C_C.eq(t.getReleaseMailCC()),
					PRODUCTRELEASETABLE.RELEASE_MAIL_B_C.eq(t.getReleaseMailBC()),
					PRODUCTRELEASETABLE.RELEASE_CONTENT.eq(t.getReleaseContent()),
					PRODUCTRELEASETABLE.RELEASE_REQUEST.eq(t.getReleaseRequest()),
					PRODUCTRELEASETABLE.RELEASE_CREATE_BY.eq(t.getReleaseCreateBy()),
					PRODUCTRELEASETABLE.RELEASE_CREATE_DATE.eq(t.getReleaseCreateDate()),
					PRODUCTRELEASETABLE.RELEASE_PUBLISHER.eq(t.getReleasePublisher()),
					PRODUCTRELEASETABLE.RELEASE_PUBLISH_DATE.eq(t.getReleasePublishDate()),
					PRODUCTRELEASETABLE.RELEASE_SPOT_TEST.eq(t.getReleaseSpotTest()),
					PRODUCTRELEASETABLE.RELEASE_PATH.eq(t.getReleasePath()),
					PRODUCTRELEASETABLE.DELETED.eq(t.getDeleted())));
			}
		});
	}

	public Pager<ProductRelease> queryObjectsForPage(int start,int limit ,ProductRelease productRelease) {
		if(productRelease==null){
			productRelease=new ProductRelease();
		}
		return getDslTemplate().queryObjectsForPage(start, limit, productRelease, false, new SelectGenerateCallback<ProductRelease>() {

			public Select generate(ProductRelease t) {
				return MysqlSelect.selectFrom(PRODUCTRELEASETABLE).where(
				and(
					PRODUCTRELEASETABLE.COMPANY_ID.eq(t.getCompanyId()),
					PRODUCTRELEASETABLE.PRODUCT_ID.eq(t.getProductId()),
					PRODUCTRELEASETABLE.RELEASE_NAME.eq(t.getReleaseName()),
					PRODUCTRELEASETABLE.RELEASE_TYPE.eq(t.getReleaseType()),
					PRODUCTRELEASETABLE.PLAN_ID.eq(t.getPlanId()),
					PRODUCTRELEASETABLE.RELEASE_MAIL_TO.eq(t.getReleaseMailTo()),
					PRODUCTRELEASETABLE.RELEASE_MAIL_C_C.eq(t.getReleaseMailCC()),
					PRODUCTRELEASETABLE.RELEASE_MAIL_B_C.eq(t.getReleaseMailBC()),
					PRODUCTRELEASETABLE.RELEASE_CONTENT.eq(t.getReleaseContent()),
					PRODUCTRELEASETABLE.RELEASE_REQUEST.eq(t.getReleaseRequest()),
					PRODUCTRELEASETABLE.RELEASE_CREATE_BY.eq(t.getReleaseCreateBy()),
					PRODUCTRELEASETABLE.RELEASE_CREATE_DATE.eq(t.getReleaseCreateDate()),
					PRODUCTRELEASETABLE.RELEASE_PUBLISHER.eq(t.getReleasePublisher()),
					PRODUCTRELEASETABLE.RELEASE_PUBLISH_DATE.eq(t.getReleasePublishDate()),
					PRODUCTRELEASETABLE.RELEASE_SPOT_TEST.eq(t.getReleaseSpotTest()),
					PRODUCTRELEASETABLE.RELEASE_PATH.eq(t.getReleasePath()),
					PRODUCTRELEASETABLE.DELETED.eq(t.getDeleted())));
			}
		});
	}

	public int[] batchInsert(boolean autoGeneratedKeys ,List<ProductRelease> productReleases) {
		if (CollectionUtil.isEmpty(productReleases)) {
			return new int[0];
		}
		return getDslTemplate().batchInsert(autoGeneratedKeys, productReleases, new NoParamInsertGenerateCallback() {

			public Insert generate() {
				return insertInto(PRODUCTRELEASETABLE).values(
					PRODUCTRELEASETABLE.COMPANY_ID.value(new JdbcNamedParameter("companyId")),
					PRODUCTRELEASETABLE.PRODUCT_ID.value(new JdbcNamedParameter("productId")),
					PRODUCTRELEASETABLE.RELEASE_NAME.value(new JdbcNamedParameter("releaseName")),
					PRODUCTRELEASETABLE.RELEASE_TYPE.value(new JdbcNamedParameter("releaseType")),
					PRODUCTRELEASETABLE.PLAN_ID.value(new JdbcNamedParameter("planId")),
					PRODUCTRELEASETABLE.RELEASE_MAIL_TO.value(new JdbcNamedParameter("releaseMailTo")),
					PRODUCTRELEASETABLE.RELEASE_MAIL_C_C.value(new JdbcNamedParameter("releaseMailCC")),
					PRODUCTRELEASETABLE.RELEASE_MAIL_B_C.value(new JdbcNamedParameter("releaseMailBC")),
					PRODUCTRELEASETABLE.RELEASE_CONTENT.value(new JdbcNamedParameter("releaseContent")),
					PRODUCTRELEASETABLE.RELEASE_REQUEST.value(new JdbcNamedParameter("releaseRequest")),
					PRODUCTRELEASETABLE.RELEASE_CREATE_BY.value(new JdbcNamedParameter("releaseCreateBy")),
					PRODUCTRELEASETABLE.RELEASE_CREATE_DATE.value(new JdbcNamedParameter("releaseCreateDate")),
					PRODUCTRELEASETABLE.RELEASE_PUBLISHER.value(new JdbcNamedParameter("releasePublisher")),
					PRODUCTRELEASETABLE.RELEASE_PUBLISH_DATE.value(new JdbcNamedParameter("releasePublishDate")),
					PRODUCTRELEASETABLE.RELEASE_SPOT_TEST.value(new JdbcNamedParameter("releaseSpotTest")),
					PRODUCTRELEASETABLE.RELEASE_PATH.value(new JdbcNamedParameter("releasePath")),
					PRODUCTRELEASETABLE.DELETED.value(new JdbcNamedParameter("deleted")));
			}
		});
	}

	public int[] batchInsert(List<ProductRelease> productReleases){
			return batchInsert(true ,productReleases);
	}

	public int[] batchUpdate(List<ProductRelease> productReleases) {
		if (CollectionUtil.isEmpty(productReleases)) {
			return new int[0];
		}
		return getDslTemplate().batchUpdate(productReleases, new NoParamUpdateGenerateCallback() {

			public Update generate() {
				return update(PRODUCTRELEASETABLE).set(
					PRODUCTRELEASETABLE.COMPANY_ID.value(new JdbcNamedParameter("companyId")),
					PRODUCTRELEASETABLE.PRODUCT_ID.value(new JdbcNamedParameter("productId")),
					PRODUCTRELEASETABLE.RELEASE_NAME.value(new JdbcNamedParameter("releaseName")),
					PRODUCTRELEASETABLE.RELEASE_TYPE.value(new JdbcNamedParameter("releaseType")),
					PRODUCTRELEASETABLE.PLAN_ID.value(new JdbcNamedParameter("planId")),
					PRODUCTRELEASETABLE.RELEASE_MAIL_TO.value(new JdbcNamedParameter("releaseMailTo")),
					PRODUCTRELEASETABLE.RELEASE_MAIL_C_C.value(new JdbcNamedParameter("releaseMailCC")),
					PRODUCTRELEASETABLE.RELEASE_MAIL_B_C.value(new JdbcNamedParameter("releaseMailBC")),
					PRODUCTRELEASETABLE.RELEASE_CONTENT.value(new JdbcNamedParameter("releaseContent")),
					PRODUCTRELEASETABLE.RELEASE_REQUEST.value(new JdbcNamedParameter("releaseRequest")),
					PRODUCTRELEASETABLE.RELEASE_CREATE_BY.value(new JdbcNamedParameter("releaseCreateBy")),
					PRODUCTRELEASETABLE.RELEASE_CREATE_DATE.value(new JdbcNamedParameter("releaseCreateDate")),
					PRODUCTRELEASETABLE.RELEASE_PUBLISHER.value(new JdbcNamedParameter("releasePublisher")),
					PRODUCTRELEASETABLE.RELEASE_PUBLISH_DATE.value(new JdbcNamedParameter("releasePublishDate")),
					PRODUCTRELEASETABLE.RELEASE_SPOT_TEST.value(new JdbcNamedParameter("releaseSpotTest")),
					PRODUCTRELEASETABLE.RELEASE_PATH.value(new JdbcNamedParameter("releasePath")),
					PRODUCTRELEASETABLE.DELETED.value(new JdbcNamedParameter("deleted"))).where(
				PRODUCTRELEASETABLE.RELEASE_ID.eq(new JdbcNamedParameter("releaseId")));
			}
		});
	}

	public int[] batchDelete(List<ProductRelease> productReleases) {
		if (CollectionUtil.isEmpty(productReleases)) {
			return new int[0];
		}
		return getDslTemplate().batchDelete(productReleases, new NoParamDeleteGenerateCallback() {

			public Delete generate() {
				return delete(PRODUCTRELEASETABLE).where(and(
				PRODUCTRELEASETABLE.RELEASE_ID.eq(new JdbcNamedParameter("releaseId")),
				PRODUCTRELEASETABLE.COMPANY_ID.eq(new JdbcNamedParameter("companyId")),
				PRODUCTRELEASETABLE.PRODUCT_ID.eq(new JdbcNamedParameter("productId")),
				PRODUCTRELEASETABLE.RELEASE_NAME.eq(new JdbcNamedParameter("releaseName")),
				PRODUCTRELEASETABLE.RELEASE_TYPE.eq(new JdbcNamedParameter("releaseType")),
				PRODUCTRELEASETABLE.PLAN_ID.eq(new JdbcNamedParameter("planId")),
				PRODUCTRELEASETABLE.RELEASE_MAIL_TO.eq(new JdbcNamedParameter("releaseMailTo")),
				PRODUCTRELEASETABLE.RELEASE_MAIL_C_C.eq(new JdbcNamedParameter("releaseMailCC")),
				PRODUCTRELEASETABLE.RELEASE_MAIL_B_C.eq(new JdbcNamedParameter("releaseMailBC")),
				PRODUCTRELEASETABLE.RELEASE_CONTENT.eq(new JdbcNamedParameter("releaseContent")),
				PRODUCTRELEASETABLE.RELEASE_REQUEST.eq(new JdbcNamedParameter("releaseRequest")),
				PRODUCTRELEASETABLE.RELEASE_CREATE_BY.eq(new JdbcNamedParameter("releaseCreateBy")),
				PRODUCTRELEASETABLE.RELEASE_CREATE_DATE.eq(new JdbcNamedParameter("releaseCreateDate")),
				PRODUCTRELEASETABLE.RELEASE_PUBLISHER.eq(new JdbcNamedParameter("releasePublisher")),
				PRODUCTRELEASETABLE.RELEASE_PUBLISH_DATE.eq(new JdbcNamedParameter("releasePublishDate")),
				PRODUCTRELEASETABLE.RELEASE_SPOT_TEST.eq(new JdbcNamedParameter("releaseSpotTest")),
				PRODUCTRELEASETABLE.RELEASE_PATH.eq(new JdbcNamedParameter("releasePath")),
				PRODUCTRELEASETABLE.DELETED.eq(new JdbcNamedParameter("deleted"))));
			}
		});
	}

}
