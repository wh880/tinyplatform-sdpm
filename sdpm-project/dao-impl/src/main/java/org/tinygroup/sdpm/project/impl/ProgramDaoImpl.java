/**
 *  Copyright (c) 1997-2013, www.tinygroup.org (luo_guo@icloud.com).
 *
 *  Licensed under the GPL, Version 3.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *       http://www.gnu.org/licenses/gpl.html
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

package org.tinygroup.sdpm.project.impl;

import static org.tinygroup.tinysqldsl.base.StatementSqlBuilder.and;
import static org.tinygroup.sdpm.project.constant.ProgramTable.*;
import static org.tinygroup.tinysqldsl.Select.*;
import static org.tinygroup.tinysqldsl.Insert.*;
import static org.tinygroup.tinysqldsl.Delete.*;
import static org.tinygroup.tinysqldsl.Update.*;

import java.io.Serializable;

import java.util.List;

import org.tinygroup.tinysqldsl.Delete;
import org.tinygroup.tinysqldsl.Insert;
import org.tinygroup.tinysqldsl.Select;
import org.tinygroup.tinysqldsl.Update;
import org.tinygroup.tinysqldsl.Pager;
import org.tinygroup.commons.tools.CollectionUtil;
import org.tinygroup.tinysqldsl.expression.JdbcNamedParameter;
import org.tinygroup.tinysqldsl.extend.MysqlSelect;
import org.tinygroup.sdpm.project.pojo.Program;
import org.tinygroup.sdpm.project.inter.ProgramDao;
import org.tinygroup.jdbctemplatedslsession.daosupport.TinyDslDaoSupport;

import org.tinygroup.jdbctemplatedslsession.callback.DeleteGenerateCallback;
import org.tinygroup.jdbctemplatedslsession.callback.InsertGenerateCallback;
import org.tinygroup.jdbctemplatedslsession.callback.NoParamDeleteGenerateCallback;
import org.tinygroup.jdbctemplatedslsession.callback.NoParamInsertGenerateCallback;
import org.tinygroup.jdbctemplatedslsession.callback.NoParamUpdateGenerateCallback;
import org.tinygroup.jdbctemplatedslsession.callback.SelectGenerateCallback;
import org.tinygroup.jdbctemplatedslsession.callback.UpdateGenerateCallback;

public class ProgramDaoImpl extends TinyDslDaoSupport implements ProgramDao {

	public Program insertObject(Program program) {
		return getDslTemplate().insertObject(program, new InsertGenerateCallback<Program>() {
			public Insert generate(Program t) {
				Insert insert = insertInto(PROGRAMTABLE).values(
					PROGRAMTABLE.PROGRAM_ID.value(t.getProgramId()),
					PROGRAMTABLE.PORTFOLIO_ID.value(t.getPortfolioId()),
					PROGRAMTABLE.COMPANY_ID.value(t.getCompanyId()),
					PROGRAMTABLE.DEPT_ID.value(t.getDeptId()),
					PROGRAMTABLE.PROGRAM_PARENT.value(t.getProgramParent()),
					PROGRAMTABLE.PROGRAM_NAME.value(t.getProgramName()),
					PROGRAMTABLE.PROGRAM_CODE.value(t.getProgramCode()),
					PROGRAMTABLE.PROGRAM_ORDER.value(t.getProgramOrder()),
					PROGRAMTABLE.PROGRAM_BEGIN.value(t.getProgramBegin()),
					PROGRAMTABLE.PROGRAM_END.value(t.getProgramEnd()),
					PROGRAMTABLE.PROGRAM_DAYS.value(t.getProgramDays()),
					PROGRAMTABLE.PROGRAM_STATUS.value(t.getProgramStatus()),
					PROGRAMTABLE.PROGRAM_STAGE.value(t.getProgramStage()),
					PROGRAMTABLE.PROGRAM_PRI.value(t.getProgramPri()),
					PROGRAMTABLE.PROGRAM_DESC.value(t.getProgramDesc()),
					PROGRAMTABLE.PROGRAM_GOAL.value(t.getProgramGoal()),
					PROGRAMTABLE.PROGRAM_OPENED_BY.value(t.getProgramOpenedBy()),
					PROGRAMTABLE.PROGRAM_OPENED_DATE.value(t.getProgramOpenedDate()),
					PROGRAMTABLE.PROGRAM_CLOSED_BY.value(t.getProgramClosedBy()),
					PROGRAMTABLE.PROGRAM_CLOSED_DATE.value(t.getProgramClosedDate()),
					PROGRAMTABLE.PROGRAM_CANCELED_BY.value(t.getProgramCanceledBy()),
					PROGRAMTABLE.PROGRAM_CANCELED_DATE.value(t.getProgramCanceledDate()),
					PROGRAMTABLE.PROGRAM_MANAGER.value(t.getProgramManager()),
					PROGRAMTABLE.ACL.value(t.getAcl()),
					PROGRAMTABLE.PROGRAM_WHITELIST.value(t.getProgramWhitelist()),
					PROGRAMTABLE.DELETED.value(t.getDeleted()));
				return insert;
			}
		});
	}

	public Program insertObject(boolean autoGeneratedKeys ,Program program) {
		return getDslTemplate().insertObjectAndReturnKey(autoGeneratedKeys ,program, new InsertGenerateCallback<Program>() {

			public Insert generate(Program t) {
				Insert insert = insertInto(PROGRAMTABLE).values(
					PROGRAMTABLE.PROGRAM_ID.value(t.getProgramId()),
					PROGRAMTABLE.PORTFOLIO_ID.value(t.getPortfolioId()),
					PROGRAMTABLE.COMPANY_ID.value(t.getCompanyId()),
					PROGRAMTABLE.DEPT_ID.value(t.getDeptId()),
					PROGRAMTABLE.PROGRAM_PARENT.value(t.getProgramParent()),
					PROGRAMTABLE.PROGRAM_NAME.value(t.getProgramName()),
					PROGRAMTABLE.PROGRAM_CODE.value(t.getProgramCode()),
					PROGRAMTABLE.PROGRAM_ORDER.value(t.getProgramOrder()),
					PROGRAMTABLE.PROGRAM_BEGIN.value(t.getProgramBegin()),
					PROGRAMTABLE.PROGRAM_END.value(t.getProgramEnd()),
					PROGRAMTABLE.PROGRAM_DAYS.value(t.getProgramDays()),
					PROGRAMTABLE.PROGRAM_STATUS.value(t.getProgramStatus()),
					PROGRAMTABLE.PROGRAM_STAGE.value(t.getProgramStage()),
					PROGRAMTABLE.PROGRAM_PRI.value(t.getProgramPri()),
					PROGRAMTABLE.PROGRAM_DESC.value(t.getProgramDesc()),
					PROGRAMTABLE.PROGRAM_GOAL.value(t.getProgramGoal()),
					PROGRAMTABLE.PROGRAM_OPENED_BY.value(t.getProgramOpenedBy()),
					PROGRAMTABLE.PROGRAM_OPENED_DATE.value(t.getProgramOpenedDate()),
					PROGRAMTABLE.PROGRAM_CLOSED_BY.value(t.getProgramClosedBy()),
					PROGRAMTABLE.PROGRAM_CLOSED_DATE.value(t.getProgramClosedDate()),
					PROGRAMTABLE.PROGRAM_CANCELED_BY.value(t.getProgramCanceledBy()),
					PROGRAMTABLE.PROGRAM_CANCELED_DATE.value(t.getProgramCanceledDate()),
					PROGRAMTABLE.PROGRAM_MANAGER.value(t.getProgramManager()),
					PROGRAMTABLE.ACL.value(t.getAcl()),
					PROGRAMTABLE.PROGRAM_WHITELIST.value(t.getProgramWhitelist()),
					PROGRAMTABLE.DELETED.value(t.getDeleted()));
				return insert;
			}
		});
	}

	public int updateObject(Program program) {
		return getDslTemplate().updateObject(program, new UpdateGenerateCallback<Program>() {
			public Update generate(Program t) {
				Update update = update(PROGRAMTABLE).set(
					PROGRAMTABLE.PORTFOLIO_ID.value(t.getPortfolioId()),
					PROGRAMTABLE.COMPANY_ID.value(t.getCompanyId()),
					PROGRAMTABLE.DEPT_ID.value(t.getDeptId()),
					PROGRAMTABLE.PROGRAM_PARENT.value(t.getProgramParent()),
					PROGRAMTABLE.PROGRAM_NAME.value(t.getProgramName()),
					PROGRAMTABLE.PROGRAM_CODE.value(t.getProgramCode()),
					PROGRAMTABLE.PROGRAM_ORDER.value(t.getProgramOrder()),
					PROGRAMTABLE.PROGRAM_BEGIN.value(t.getProgramBegin()),
					PROGRAMTABLE.PROGRAM_END.value(t.getProgramEnd()),
					PROGRAMTABLE.PROGRAM_DAYS.value(t.getProgramDays()),
					PROGRAMTABLE.PROGRAM_STATUS.value(t.getProgramStatus()),
					PROGRAMTABLE.PROGRAM_STAGE.value(t.getProgramStage()),
					PROGRAMTABLE.PROGRAM_PRI.value(t.getProgramPri()),
					PROGRAMTABLE.PROGRAM_DESC.value(t.getProgramDesc()),
					PROGRAMTABLE.PROGRAM_GOAL.value(t.getProgramGoal()),
					PROGRAMTABLE.PROGRAM_OPENED_BY.value(t.getProgramOpenedBy()),
					PROGRAMTABLE.PROGRAM_OPENED_DATE.value(t.getProgramOpenedDate()),
					PROGRAMTABLE.PROGRAM_CLOSED_BY.value(t.getProgramClosedBy()),
					PROGRAMTABLE.PROGRAM_CLOSED_DATE.value(t.getProgramClosedDate()),
					PROGRAMTABLE.PROGRAM_CANCELED_BY.value(t.getProgramCanceledBy()),
					PROGRAMTABLE.PROGRAM_CANCELED_DATE.value(t.getProgramCanceledDate()),
					PROGRAMTABLE.PROGRAM_MANAGER.value(t.getProgramManager()),
					PROGRAMTABLE.ACL.value(t.getAcl()),
					PROGRAMTABLE.PROGRAM_WHITELIST.value(t.getProgramWhitelist()),
					PROGRAMTABLE.DELETED.value(t.getDeleted())).where(
					PROGRAMTABLE.PROGRAM_ID.eq(t.getProgramId()));
				return update;
			}
		});
	}

	public int deleteObject(Serializable pk){
		return getDslTemplate().deleteObject(pk, new DeleteGenerateCallback<Serializable>() {
			public Delete generate(Serializable pk) {
				return delete(PROGRAMTABLE).where(PROGRAMTABLE.PROGRAM_ID.eq(pk));
			}
		});
	}

	public int deleteObjects(Serializable... pks) {
		return getDslTemplate().deleteObjects(new DeleteGenerateCallback<Serializable[]>() {
			public Delete generate(Serializable[] t) {
				return delete(PROGRAMTABLE).where(PROGRAMTABLE.PROGRAM_ID.in(t));
		}
		},pks);
	}

	public Program getObjectById(Serializable pk) {
		return getDslTemplate().getObjectById(pk, Program.class, new SelectGenerateCallback<Serializable>() {
		@SuppressWarnings("rawtypes")
		public Select generate(Serializable t) {
			return selectFrom(PROGRAMTABLE).where(PROGRAMTABLE.PROGRAM_ID.eq(t));
			}
		});
	}

	public List<Program> queryObjects(Program program) {
		if(program==null){
			program=new Program();
		}
		return getDslTemplate().queryObjects(program, new SelectGenerateCallback<Program>() {

			@SuppressWarnings("rawtypes")
			public Select generate(Program t) {
				return selectFrom(PROGRAMTABLE).where(
				and(
					PROGRAMTABLE.PORTFOLIO_ID.eq(t.getPortfolioId()),
					PROGRAMTABLE.COMPANY_ID.eq(t.getCompanyId()),
					PROGRAMTABLE.DEPT_ID.eq(t.getDeptId()),
					PROGRAMTABLE.PROGRAM_PARENT.eq(t.getProgramParent()),
					PROGRAMTABLE.PROGRAM_NAME.eq(t.getProgramName()),
					PROGRAMTABLE.PROGRAM_CODE.eq(t.getProgramCode()),
					PROGRAMTABLE.PROGRAM_ORDER.eq(t.getProgramOrder()),
					PROGRAMTABLE.PROGRAM_BEGIN.eq(t.getProgramBegin()),
					PROGRAMTABLE.PROGRAM_END.eq(t.getProgramEnd()),
					PROGRAMTABLE.PROGRAM_DAYS.eq(t.getProgramDays()),
					PROGRAMTABLE.PROGRAM_STATUS.eq(t.getProgramStatus()),
					PROGRAMTABLE.PROGRAM_STAGE.eq(t.getProgramStage()),
					PROGRAMTABLE.PROGRAM_PRI.eq(t.getProgramPri()),
					PROGRAMTABLE.PROGRAM_DESC.eq(t.getProgramDesc()),
					PROGRAMTABLE.PROGRAM_GOAL.eq(t.getProgramGoal()),
					PROGRAMTABLE.PROGRAM_OPENED_BY.eq(t.getProgramOpenedBy()),
					PROGRAMTABLE.PROGRAM_OPENED_DATE.eq(t.getProgramOpenedDate()),
					PROGRAMTABLE.PROGRAM_CLOSED_BY.eq(t.getProgramClosedBy()),
					PROGRAMTABLE.PROGRAM_CLOSED_DATE.eq(t.getProgramClosedDate()),
					PROGRAMTABLE.PROGRAM_CANCELED_BY.eq(t.getProgramCanceledBy()),
					PROGRAMTABLE.PROGRAM_CANCELED_DATE.eq(t.getProgramCanceledDate()),
					PROGRAMTABLE.PROGRAM_MANAGER.eq(t.getProgramManager()),
					PROGRAMTABLE.ACL.eq(t.getAcl()),
					PROGRAMTABLE.PROGRAM_WHITELIST.eq(t.getProgramWhitelist()),
					PROGRAMTABLE.DELETED.eq(t.getDeleted())));
			}
		});
	}

	public Pager<Program> queryObjectsForPage(int start,int limit ,Program program) {
		if(program==null){
			program=new Program();
		}
		return getDslTemplate().queryObjectsForPage(start, limit, program, false, new SelectGenerateCallback<Program>() {

			public Select generate(Program t) {
				return MysqlSelect.selectFrom(PROGRAMTABLE).where(
				and(
					PROGRAMTABLE.PORTFOLIO_ID.eq(t.getPortfolioId()),
					PROGRAMTABLE.COMPANY_ID.eq(t.getCompanyId()),
					PROGRAMTABLE.DEPT_ID.eq(t.getDeptId()),
					PROGRAMTABLE.PROGRAM_PARENT.eq(t.getProgramParent()),
					PROGRAMTABLE.PROGRAM_NAME.eq(t.getProgramName()),
					PROGRAMTABLE.PROGRAM_CODE.eq(t.getProgramCode()),
					PROGRAMTABLE.PROGRAM_ORDER.eq(t.getProgramOrder()),
					PROGRAMTABLE.PROGRAM_BEGIN.eq(t.getProgramBegin()),
					PROGRAMTABLE.PROGRAM_END.eq(t.getProgramEnd()),
					PROGRAMTABLE.PROGRAM_DAYS.eq(t.getProgramDays()),
					PROGRAMTABLE.PROGRAM_STATUS.eq(t.getProgramStatus()),
					PROGRAMTABLE.PROGRAM_STAGE.eq(t.getProgramStage()),
					PROGRAMTABLE.PROGRAM_PRI.eq(t.getProgramPri()),
					PROGRAMTABLE.PROGRAM_DESC.eq(t.getProgramDesc()),
					PROGRAMTABLE.PROGRAM_GOAL.eq(t.getProgramGoal()),
					PROGRAMTABLE.PROGRAM_OPENED_BY.eq(t.getProgramOpenedBy()),
					PROGRAMTABLE.PROGRAM_OPENED_DATE.eq(t.getProgramOpenedDate()),
					PROGRAMTABLE.PROGRAM_CLOSED_BY.eq(t.getProgramClosedBy()),
					PROGRAMTABLE.PROGRAM_CLOSED_DATE.eq(t.getProgramClosedDate()),
					PROGRAMTABLE.PROGRAM_CANCELED_BY.eq(t.getProgramCanceledBy()),
					PROGRAMTABLE.PROGRAM_CANCELED_DATE.eq(t.getProgramCanceledDate()),
					PROGRAMTABLE.PROGRAM_MANAGER.eq(t.getProgramManager()),
					PROGRAMTABLE.ACL.eq(t.getAcl()),
					PROGRAMTABLE.PROGRAM_WHITELIST.eq(t.getProgramWhitelist()),
					PROGRAMTABLE.DELETED.eq(t.getDeleted())));
			}
		});
	}

	public int[] batchInsert(boolean autoGeneratedKeys ,List<Program> programs) {
		if (CollectionUtil.isEmpty(programs)) {
			return new int[0];
		}
		return getDslTemplate().batchInsert(autoGeneratedKeys, programs, new NoParamInsertGenerateCallback() {

			public Insert generate() {
				return insertInto(PROGRAMTABLE).values(
					PROGRAMTABLE.PORTFOLIO_ID.value(new JdbcNamedParameter("portfolioId")),
					PROGRAMTABLE.COMPANY_ID.value(new JdbcNamedParameter("companyId")),
					PROGRAMTABLE.DEPT_ID.value(new JdbcNamedParameter("deptId")),
					PROGRAMTABLE.PROGRAM_PARENT.value(new JdbcNamedParameter("programParent")),
					PROGRAMTABLE.PROGRAM_NAME.value(new JdbcNamedParameter("programName")),
					PROGRAMTABLE.PROGRAM_CODE.value(new JdbcNamedParameter("programCode")),
					PROGRAMTABLE.PROGRAM_ORDER.value(new JdbcNamedParameter("programOrder")),
					PROGRAMTABLE.PROGRAM_BEGIN.value(new JdbcNamedParameter("programBegin")),
					PROGRAMTABLE.PROGRAM_END.value(new JdbcNamedParameter("programEnd")),
					PROGRAMTABLE.PROGRAM_DAYS.value(new JdbcNamedParameter("programDays")),
					PROGRAMTABLE.PROGRAM_STATUS.value(new JdbcNamedParameter("programStatus")),
					PROGRAMTABLE.PROGRAM_STAGE.value(new JdbcNamedParameter("programStage")),
					PROGRAMTABLE.PROGRAM_PRI.value(new JdbcNamedParameter("programPri")),
					PROGRAMTABLE.PROGRAM_DESC.value(new JdbcNamedParameter("programDesc")),
					PROGRAMTABLE.PROGRAM_GOAL.value(new JdbcNamedParameter("programGoal")),
					PROGRAMTABLE.PROGRAM_OPENED_BY.value(new JdbcNamedParameter("programOpenedBy")),
					PROGRAMTABLE.PROGRAM_OPENED_DATE.value(new JdbcNamedParameter("programOpenedDate")),
					PROGRAMTABLE.PROGRAM_CLOSED_BY.value(new JdbcNamedParameter("programClosedBy")),
					PROGRAMTABLE.PROGRAM_CLOSED_DATE.value(new JdbcNamedParameter("programClosedDate")),
					PROGRAMTABLE.PROGRAM_CANCELED_BY.value(new JdbcNamedParameter("programCanceledBy")),
					PROGRAMTABLE.PROGRAM_CANCELED_DATE.value(new JdbcNamedParameter("programCanceledDate")),
					PROGRAMTABLE.PROGRAM_MANAGER.value(new JdbcNamedParameter("programManager")),
					PROGRAMTABLE.ACL.value(new JdbcNamedParameter("acl")),
					PROGRAMTABLE.PROGRAM_WHITELIST.value(new JdbcNamedParameter("programWhitelist")),
					PROGRAMTABLE.DELETED.value(new JdbcNamedParameter("deleted")));
			}
		});
	}

	public int[] batchInsert(List<Program> programs){
			return batchInsert(true ,programs);
	}

	public int[] batchUpdate(List<Program> programs) {
		if (CollectionUtil.isEmpty(programs)) {
			return new int[0];
		}
		return getDslTemplate().batchUpdate(programs, new NoParamUpdateGenerateCallback() {

			public Update generate() {
				return update(PROGRAMTABLE).set(
					PROGRAMTABLE.PORTFOLIO_ID.value(new JdbcNamedParameter("portfolioId")),
					PROGRAMTABLE.COMPANY_ID.value(new JdbcNamedParameter("companyId")),
					PROGRAMTABLE.DEPT_ID.value(new JdbcNamedParameter("deptId")),
					PROGRAMTABLE.PROGRAM_PARENT.value(new JdbcNamedParameter("programParent")),
					PROGRAMTABLE.PROGRAM_NAME.value(new JdbcNamedParameter("programName")),
					PROGRAMTABLE.PROGRAM_CODE.value(new JdbcNamedParameter("programCode")),
					PROGRAMTABLE.PROGRAM_ORDER.value(new JdbcNamedParameter("programOrder")),
					PROGRAMTABLE.PROGRAM_BEGIN.value(new JdbcNamedParameter("programBegin")),
					PROGRAMTABLE.PROGRAM_END.value(new JdbcNamedParameter("programEnd")),
					PROGRAMTABLE.PROGRAM_DAYS.value(new JdbcNamedParameter("programDays")),
					PROGRAMTABLE.PROGRAM_STATUS.value(new JdbcNamedParameter("programStatus")),
					PROGRAMTABLE.PROGRAM_STAGE.value(new JdbcNamedParameter("programStage")),
					PROGRAMTABLE.PROGRAM_PRI.value(new JdbcNamedParameter("programPri")),
					PROGRAMTABLE.PROGRAM_DESC.value(new JdbcNamedParameter("programDesc")),
					PROGRAMTABLE.PROGRAM_GOAL.value(new JdbcNamedParameter("programGoal")),
					PROGRAMTABLE.PROGRAM_OPENED_BY.value(new JdbcNamedParameter("programOpenedBy")),
					PROGRAMTABLE.PROGRAM_OPENED_DATE.value(new JdbcNamedParameter("programOpenedDate")),
					PROGRAMTABLE.PROGRAM_CLOSED_BY.value(new JdbcNamedParameter("programClosedBy")),
					PROGRAMTABLE.PROGRAM_CLOSED_DATE.value(new JdbcNamedParameter("programClosedDate")),
					PROGRAMTABLE.PROGRAM_CANCELED_BY.value(new JdbcNamedParameter("programCanceledBy")),
					PROGRAMTABLE.PROGRAM_CANCELED_DATE.value(new JdbcNamedParameter("programCanceledDate")),
					PROGRAMTABLE.PROGRAM_MANAGER.value(new JdbcNamedParameter("programManager")),
					PROGRAMTABLE.ACL.value(new JdbcNamedParameter("acl")),
					PROGRAMTABLE.PROGRAM_WHITELIST.value(new JdbcNamedParameter("programWhitelist")),
					PROGRAMTABLE.DELETED.value(new JdbcNamedParameter("deleted"))).where(
				PROGRAMTABLE.PROGRAM_ID.eq(new JdbcNamedParameter("programId")));
			}
		});
	}

	public int[] batchDelete(List<Program> programs) {
		if (CollectionUtil.isEmpty(programs)) {
			return new int[0];
		}
		return getDslTemplate().batchDelete(programs, new NoParamDeleteGenerateCallback() {

			public Delete generate() {
				return delete(PROGRAMTABLE).where(and(
				PROGRAMTABLE.PROGRAM_ID.eq(new JdbcNamedParameter("programId")),
				PROGRAMTABLE.PORTFOLIO_ID.eq(new JdbcNamedParameter("portfolioId")),
				PROGRAMTABLE.COMPANY_ID.eq(new JdbcNamedParameter("companyId")),
				PROGRAMTABLE.DEPT_ID.eq(new JdbcNamedParameter("deptId")),
				PROGRAMTABLE.PROGRAM_PARENT.eq(new JdbcNamedParameter("programParent")),
				PROGRAMTABLE.PROGRAM_NAME.eq(new JdbcNamedParameter("programName")),
				PROGRAMTABLE.PROGRAM_CODE.eq(new JdbcNamedParameter("programCode")),
				PROGRAMTABLE.PROGRAM_ORDER.eq(new JdbcNamedParameter("programOrder")),
				PROGRAMTABLE.PROGRAM_BEGIN.eq(new JdbcNamedParameter("programBegin")),
				PROGRAMTABLE.PROGRAM_END.eq(new JdbcNamedParameter("programEnd")),
				PROGRAMTABLE.PROGRAM_DAYS.eq(new JdbcNamedParameter("programDays")),
				PROGRAMTABLE.PROGRAM_STATUS.eq(new JdbcNamedParameter("programStatus")),
				PROGRAMTABLE.PROGRAM_STAGE.eq(new JdbcNamedParameter("programStage")),
				PROGRAMTABLE.PROGRAM_PRI.eq(new JdbcNamedParameter("programPri")),
				PROGRAMTABLE.PROGRAM_DESC.eq(new JdbcNamedParameter("programDesc")),
				PROGRAMTABLE.PROGRAM_GOAL.eq(new JdbcNamedParameter("programGoal")),
				PROGRAMTABLE.PROGRAM_OPENED_BY.eq(new JdbcNamedParameter("programOpenedBy")),
				PROGRAMTABLE.PROGRAM_OPENED_DATE.eq(new JdbcNamedParameter("programOpenedDate")),
				PROGRAMTABLE.PROGRAM_CLOSED_BY.eq(new JdbcNamedParameter("programClosedBy")),
				PROGRAMTABLE.PROGRAM_CLOSED_DATE.eq(new JdbcNamedParameter("programClosedDate")),
				PROGRAMTABLE.PROGRAM_CANCELED_BY.eq(new JdbcNamedParameter("programCanceledBy")),
				PROGRAMTABLE.PROGRAM_CANCELED_DATE.eq(new JdbcNamedParameter("programCanceledDate")),
				PROGRAMTABLE.PROGRAM_MANAGER.eq(new JdbcNamedParameter("programManager")),
				PROGRAMTABLE.ACL.eq(new JdbcNamedParameter("acl")),
				PROGRAMTABLE.PROGRAM_WHITELIST.eq(new JdbcNamedParameter("programWhitelist")),
				PROGRAMTABLE.DELETED.eq(new JdbcNamedParameter("deleted"))));
			}
		});
	}

}
