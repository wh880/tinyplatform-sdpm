#!set(activeTitle="项目管理",activeMenuId=currentPageId)
#import("/org/tinygroup/button/components/button_common.component")
#import("/org/tinygroup/button/components/button.component")
#import("/org/tinygroup/button/components/button_smart.component")
<style>
.tabLayout .tabBar span a{color:#333}
.tabLayout .tabBar .Current a{color:#fff}
.operationbar{border-top:none;background:#f9fafe;padding:6px 5px 6px 10px;}
.btn-group #Dropdown{background:none;border:none;padding:0 3px}
.open #downMenuSty{min-width:75px}
.caret {
    display: inline-block;
    width: 0;
    height: 0;
    margin-left: -5px;
    margin-right: 5px;
    vertical-align: middle;
    border-top: 4px dashed;
    border-right: 4px solid transparent;
    border-left: 4px solid transparent;
}
h3 {line-height: 1.2;}
</style>
#include("/project/page/event/common.page")
#set(name="rw")
#@div()
	#@tabWithInit("tab_demo" "optionsBox")
			#@div(divClass="dropdownBox")
				#include("/project/page/outpage/dropdownMenu.page")
			#end
			#@tabHead()
				#include("/project/page/outpage/protab.page")							
				<a href="${TINY_CONTEXT_PATH}/project/page/outpage/add_project.page" style="float:right">#buttonIcon(iconClass="icon-plus")添加项目</a>
				<a href="${TINY_CONTEXT_PATH}/project/page/outpage/allproject.page" style="float:right">#buttonIcon(iconClass="icon-list")所有项目</a>
			#end				
			#@tabBodyCol("ptop-5")
			#@div(divClass="operationbar")
				<span class="f">
					<a href="#" class="active_btn">未关闭</a>
					<a href="#">所有</a>
					<a href="#">看板</a>
					<a href="${TINY_CONTEXT_PATH}/project/page/outpage/project_gantt.page">甘特图</a>
					<a href="${TINY_CONTEXT_PATH}/project/page/outpage/project_calendar.page">日历</a>
					<a href="#">燃尽图</a>
					<a href="#">指派给我</a>
					#*	#@dropDownClickMenu("更多" "#")						
							#@dropDownItem("#")我完成#end
							#@dropDownItem("#")未开始#end
							#@dropDownItem("#")进行中#end
							#@dropDownItem("#")未完成#end
							#@dropDownItem("#")已完成#end
							#@dropDownItem("#")已关闭#end
							#@dropDownItem("#")已延期#end
							#@dropDownItem("#")需求变动#end
							#@dropDownItem("#")已取消#end
	  				#end  *#
	  				#@buttonGroup()
                    #@buttonDropdown("Dropdown")更多  #@spanCaret()#end#end
                    #@ulDropdownMenu("downMenuSty")
                    <p>
                    #@iconOperations("#myModal" "" "我完成" "865" "200"
					 "#" "ml-5")我完成#end
					 </p>
					 <p>
                     #@iconOperations("#myModal" "" "未开始" "865" "200"
					 "#" "ml-5")未开始#end
					 </p>
					 <p>
                     #@iconOperations("#myModal" "" "进行中" "865" "200"
					 "#" "ml-5")进行中#end
					 </p>
					 <p>
					 #@iconOperations("#myModal" "" "进行中" "865" "200"
					 "#" "ml-5")未完成#end
					 </p>
					 <p>
					  #@iconOperations("#myModal" "" "进行中" "865" "200"
					 "#" "ml-5")已完成#end
					 </p>
					 <p>
					  #@iconOperations("#myModal" "" "进行中" "865" "200"
					 "#" "ml-5")已关闭#end
					 </p>
					 <p>
					  #@iconOperations("#myModal" "" "进行中" "865" "200"
					 "#" "ml-5")已延期#end
					 </p>
					 <p>
					  #@iconOperations("#myModal" "" "进行中" "865" "200"
					 "#" "ml-5")需求变动#end
					 </p>
					  #@iconOperations("#myModal" "" "进行中" "865" "200"
					 "#" "ml-5")已取消#end
                     #@liDivider()#end
                    #end
                    #end
                    
                    #@buttonGroup()
                    #@buttonDropdown("Dropdown")分组查看 #@spanCaret()#end#end
                    #@ulDropdownMenu("downMenuSty")
                    <p>
                    #@iconOperations("#myModal" "" "我完成" "865" "200"
					 "#" "ml-5")需求分组#end
					 </p>
					 <p>
                     #@iconOperations("#myModal" "" "未开始" "865" "200"
					 "#" "ml-5")状态分组#end
					 </p>
					 <p>
                     #@iconOperations("#myModal" "" "进行中" "865" "200"
					 "#" "ml-5")优先级分组#end
					 </p>
					 <p>
					 #@iconOperations("#myModal" "" "进行中" "865" "200"
					 "#" "ml-5")创建者分组#end
					 </p>
					 <p>
					  #@iconOperations("#myModal" "" "进行中" "865" "200"
					 "#" "ml-5")指派给分组#end
					 </p>
					 <p>
					  #@iconOperations("#myModal" "" "进行中" "865" "200"
					 "#" "ml-5")完成者分组#end
					 </p>
					 <p>
					  #@iconOperations("#myModal" "" "进行中" "865" "200"
					 "#" "ml-5")关闭者分组#end
					 </p>
					 <p>
					  #@iconOperations("#myModal" "" "进行中" "865" "200"
					 "#" "ml-5")预计分组#end
					 </p>
					 <p>
					  #@iconOperations("#myModal" "" "进行中" "865" "200"
					 "#" "ml-5")已消耗分组#end
					 <p>
					 <p>
					  #@iconOperations("#myModal" "" "进行中" "865" "200"
					 "#" "ml-5")剩余分组#end
					 <p>
					 <p>
					  #@iconOperations("#myModal" "" "进行中" "865" "200"
					 "#" "ml-5")类型分组#end
					 <p>
					
					  #@iconOperations("#myModal" "" "进行中" "865" "200"
					 "#" "ml-5")截止分组#end
					
                     #@liDivider()#end
                    #end
                    #end
                    
                    
	  				 
				</span>
					
	  			#*	#@dropDownClickMenu("分组查看" "#")						
							#@dropDownItem("#")需求分组#end
							#@dropDownItem("#")状态分组#end
							#@dropDownItem("#")优先级分组#end
							#@dropDownItem("#")创建者分组#end
							#@dropDownItem("#")指派给分组#end
							#@dropDownItem("#")完成者分组#end
							#@dropDownItem("#")关闭着分组#end
							#@dropDownItem("#")预计分组#end
							#@dropDownItem("#")已消耗分组#end							
							#@dropDownItem("#")剩余分组#end
							#@dropDownItem("#")类型分组#end
							#@dropDownItem("#")截止分组#end
	  				#end   *#
	  				
	  				
					<a href="#" id="showsearchmore">#buttonIcon(iconClass="icon-search")搜索</a>
					

				<span class="r">
				    #buttonIcon(iconClass="icon-download-alt")	
				    #@buttonGroup()
                    #@buttonDropdown("Dropdown")导入  #@spanCaret()#end#end
                    #@ulDropdownMenu("downMenuSty")
                    <p>
                    <span><a href="${TINY_CONTEXT_PATH}/project/page/outpage/Bug_updown.page">&nbsp导入bug</a></span>
					 </p>
					 <p>
                    <span><a href="${TINY_CONTEXT_PATH}/project/page/outpage/task_download.page">&nbsp导入任务</a></span>
					 </p>
                   
					  #@aModal("#myModal2" "导入Excel" "600" "120" "" "/project/page/tabledemo/add_doc.pagelet")&nbsp导入Excel#end
					 #@dialog("myModal2")
						#@dialogHeader()#end
						#@dialogBody()<p></p>#end
						
					#end
                     #@liDivider()#end
                    #end
                    #end&nbsp;
                    
                    #buttonIcon(iconClass="icon-upload-alt")	
				    #@buttonGroup()
                    #@buttonDropdown("Dropdown")导出  #@spanCaret()#end#end
                    #@ulDropdownMenu("downMenuSty")
                    
					 <p>
					 #@aModal("#myModal" "导出数据" "600" "120" "" "/project/page/outpage/testManagement1.pagelet")&nbsp导出数据#end
					 #@dialog("myModal")
						#@dialogHeader()#end
						#@dialogBody()<p></p>#end
						
					#end
					 
					</p>
                    
					  #@aModal("#myModal1" "导出数据" "600" "150" "" "/project/page/outpage/modal_updown.pagelet")&nbsp导出模板#end
					  #@dialog("myModal1")
						#@dialogHeader()#end
						#@dialogBody()<p></p>#end
						
				 	#end        
                     
                    #end
                    #end&nbsp;
                    
					<a href="${TINY_CONTEXT_PATH}/project/page/outpage/reportform.page">#buttonIcon(iconClass="icon-bar-chart")报表</a>&nbsp;
					
					<a href="${TINY_CONTEXT_PATH}/project/page/tabledemo/bech_add_task.page">#buttonIcon(iconClass="icon-plus-sign")批量增加</a>&nbsp;
					
					<a href="${TINY_CONTEXT_PATH}/project/page/tabledemo/add_task.page">#buttonIcon(iconClass="icon-plus")建任务</a>&nbsp;
					
					
				</span>
				#div(divClass="clearfix")
			#end
			#include("/project/page/outpage/mulsearch.page")
		#end
			##operationbar end
			#@toggleBox({"class":"open"})##展开为class:OPEN 要附加其它的属性请用MAP带入
	       #@toggleLeft({"class":"aclass"})
	          #@settoggleLeftTitle()产品文档库#end
		   #@settoggleLeftBody("treeLeftbox")
			<ul class="treeList">
				<li id="listContent" style="display:none; position:absolute;left:74px;">
					<ul id="alternative" class="ztree" style="width:126px;min-height:160px;max-height:300px;"></ul>
				</li>
			</ul>
			<ul id="treeDrag" class="ztree"></ul>
		#end
	#end
	
	#@toggleRight()
		##class 为sorting 表票可排序 为sorting_desc(正序为为sorting_asc) 为当前倒序
			#include("/project/page/outpage/bech_add_task_date.page")
	
		
#*			#include("/project/page/outpage/add_task_date.page")*#
			<script type="text/javascript">
				$(function(){
					$('#${tableId}').on('click','.delBtn',function(e){
						user_del(this,'1');
					});
				})
			</script>
			#@dialog("myModal")
				#@dialogHeader()对话框标题#end
				#@dialogBody()<p>对话框内容…</p>#end
				#@dialogFooter()
					#@buttonEnsure()确定#end
					#@buttonCancel()关闭#end
				#end
			#end
    #end
#end
  #end
#end
<script type="text/javascript">
		<!--
		var setting = {
			view: {
				addHoverDom: addHoverDom,
				removeHoverDom: removeHoverDom,
				selectedMulti: false
			},
			edit: {
				enable: true,
				editNameSelectAll: true,

			},
			data: {
				simpleData: {
					enable: true
				}
			},
			callback: {
				beforeDrag: beforeDrag,
				beforeEditName: beforeEditName,
				beforeRemove: beforeRemove,
				beforeRename: beforeRename,
				onRemove: onRemove,
				onRename: onRename
			}
		};
		var treeNodes =[
			{ id:1, pId:0, name:"随意拖拽", open:true},
			{ id:11, pId:1, name:"年龄 1-1"},
			{ id:12, pId:1, name:"年龄 1-2"},
			{ id:13, pId:1, name:"年龄 1-3"},
			{ id:2, pId:0, name:"随意拖拽2", open:true},
			{ id:21, pId:2, name:"学历 2-1"},
			{ id:22, pId:2, name:"学历  2-2"},
			{ id:23, pId:2, name:"学历  2-3"},
			{ id:3, pId:0, name:"禁止拖拽3", open:true, drag:false},
			{ id:31, pId:3, name:"城市 3-1", drag:false},
			{ id:32, pId:3, name:"城市 3-2", drag:false},
			{ id:33, pId:3, name:"地区 3-3", drag:false}
		];

		var log, className = "dark";
		function beforeDrag(treeId, treeNodes) {
			return false;
		}
		function beforeEditName(treeId, treeNode) {
			className = (className === "dark" ? "":"dark");
			showLog("[ "+getTime()+" beforeEditName ]&nbsp;&nbsp;&nbsp;&nbsp; " + treeNode.name);
			var zTree = $.fn.zTree.getZTreeObj("treeDrag");
			zTree.selectNode(treeNode);
			return confirm("进入节点 -- " + treeNode.name + " 的编辑状态吗？");
		}
		function beforeRemove(treeId, treeNode) {
			className = (className === "dark" ? "":"dark");
			showLog("[ "+getTime()+" beforeRemove ]&nbsp;&nbsp;&nbsp;&nbsp; " + treeNode.name);
			var zTree = $.fn.zTree.getZTreeObj("treeDrag");
			zTree.selectNode(treeNode);
			return confirm("确认删除 节点 -- " + treeNode.name + " 吗？");
		}
		function onRemove(e, treeId, treeNode) {
			showLog("[ "+getTime()+" onRemove ]&nbsp;&nbsp;&nbsp;&nbsp; " + treeNode.name);
		}
		function beforeRename(treeId, treeNode, newName, isCancel) {
			className = (className === "dark" ? "":"dark");
			showLog((isCancel ? "<span style='color:red'>":"") + "[ "+getTime()+" beforeRename ]&nbsp;&nbsp;&nbsp;&nbsp; " + treeNode.name + (isCancel ? "</span>":""));
			if (newName.length == 0) {
				alert("节点名称不能为空.");
				var zTree = $.fn.zTree.getZTreeObj("treeDrag");
				setTimeout(function(){zTree.editName(treeNode)}, 10);
				return false;
			}
			return true;
		}
		function onRename(e, treeId, treeNode, isCancel) {
			showLog((isCancel ? "<span style='color:red'>":"") + "[ "+getTime()+" onRename ]&nbsp;&nbsp;&nbsp;&nbsp; " + treeNode.name + (isCancel ? "</span>":""));
		}
		function showRemoveBtn(treeId, treeNode) {
			return !treeNode.isFirstNode;
		}
		function showRenameBtn(treeId, treeNode) {
			return !treeNode.isLastNode;
		}
		function showLog(str) {
			if (!log) log = $("#log");
			log.append("<li class='"+className+"'>"+str+"</li>");
			if(log.children("li").length > 8) {
				log.get(0).removeChild(log.children("li")[0]);
			}
		}
		function getTime() {
			var now= new Date(),
			h=now.getHours(),
			m=now.getMinutes(),
			s=now.getSeconds(),
			ms=now.getMilliseconds();
			return (h+":"+m+":"+s+ " " +ms);
		}

		var newCount = 1;
		function addHoverDom(treeId, treeNode) {
			var sObj = $("#" + treeNode.tId + "_span");
			if (treeNode.editNameFlag || $("#addBtn_"+treeNode.tId).length>0) return;
			var addStr = "<span class='button add' id='addBtn_" + treeNode.tId
				+ "' title='add node' onfocus='this.blur();'></span>";
			sObj.after(addStr);
			var btn = $("#addBtn_"+treeNode.tId);
			if (btn) btn.bind("click", function(){
				var zTree = $.fn.zTree.getZTreeObj("treeDrag");
				zTree.addNodes(treeNode, {id:(100 + newCount), pId:treeNode.id, name:"new node" + (newCount++)});
				return false;
			});
		};
		function removeHoverDom(treeId, treeNode) {
			$("#addBtn_"+treeNode.tId).unbind().remove();
		};
		function selectAll() {
			var zTree = $.fn.zTree.getZTreeObj("treeDrag");
			zTree.setting.edit.editNameSelectAll =  $("#selectAll").attr("checked");
		}

		$(document).ready(function(){
			$.fn.zTree.init($("#treeDrag"), setting);
			$("#selectAll").bind("click", selectAll);
		});
		//-->

		function dropPrev(treeId, nodes, targetNode) {
			var pNode = targetNode.getParentNode();
			if (pNode && pNode.dropInner === false) {
				return false;
			} else {
				for (var i=0,l=curDragNodes.length; i<l; i++) {
					var curPNode = curDragNodes[i].getParentNode();
					if (curPNode && curPNode !== targetNode.getParentNode() && curPNode.childOuter === false) {
						return false;
					}
				}
			}
			return true;
		}
		function dropInner(treeId, nodes, targetNode) {
			if (targetNode && targetNode.dropInner === false) {
				return false;
			} else {
				for (var i=0,l=curDragNodes.length; i<l; i++) {
					if (!targetNode && curDragNodes[i].dropRoot === false) {
						return false;
					} else if (curDragNodes[i].parentTId && curDragNodes[i].getParentNode() !== targetNode && curDragNodes[i].getParentNode().childOuter === false) {
						return false;
					}
				}
			}
			return true;
		}
		function dropNext(treeId, nodes, targetNode) {
			var pNode = targetNode.getParentNode();
			if (pNode && pNode.dropInner === false) {
				return false;
			} else {
				for (var i=0,l=curDragNodes.length; i<l; i++) {
					var curPNode = curDragNodes[i].getParentNode();
					if (curPNode && curPNode !== targetNode.getParentNode() && curPNode.childOuter === false) {
						return false;
					}
				}
			}
			return true;
		}

		var log, className = "dark", curDragNodes, autoExpandNode;
		function beforeDrag(treeId, treeNodes) {
			className = (className === "dark" ? "":"dark");
			showLog("[ "+getTime()+" beforeDrag ]&nbsp;&nbsp;&nbsp;&nbsp; drag: " + treeNodes.length + " nodes." );
			for (var i=0,l=treeNodes.length; i<l; i++) {
				if (treeNodes[i].drag === false) {
					curDragNodes = null;
					return false;
				} else if (treeNodes[i].parentTId && treeNodes[i].getParentNode().childDrag === false) {
					curDragNodes = null;
					return false;
				}
			}
			curDragNodes = treeNodes;
			return true;
		}
		function beforeDragOpen(treeId, treeNode) {
			autoExpandNode = treeNode;
			return true;
		}
		function beforeDrop(treeId, treeNodes, targetNode, moveType, isCopy) {
			className = (className === "dark" ? "":"dark");
			showLog("[ "+getTime()+" beforeDrop ]&nbsp;&nbsp;&nbsp;&nbsp; moveType:" + moveType);
			showLog("target: " + (targetNode ? targetNode.name : "root") + "  -- is "+ (isCopy==null? "cancel" : isCopy ? "copy" : "move"));
			return true;
		}
		function onDrag(event, treeId, treeNodes) {
			className = (className === "dark" ? "":"dark");
			showLog("[ "+getTime()+" onDrag ]&nbsp;&nbsp;&nbsp;&nbsp; drag: " + treeNodes.length + " nodes." );
		}
		function onDrop(event, treeId, treeNodes, targetNode, moveType, isCopy) {
			className = (className === "dark" ? "":"dark");
			showLog("[ "+getTime()+" onDrop ]&nbsp;&nbsp;&nbsp;&nbsp; moveType:" + moveType);
			showLog("target: " + (targetNode ? targetNode.name : "root") + "  -- is "+ (isCopy==null? "cancel" : isCopy ? "copy" : "move"))
		}
		function onExpand(event, treeId, treeNode) {
			if (treeNode === autoExpandNode) {
				className = (className === "dark" ? "":"dark");
				showLog("[ "+getTime()+" onExpand ]&nbsp;&nbsp;&nbsp;&nbsp;" + treeNode.name);
			}
		}

		function showLog(str) {
			if (!log) log = $("#log");
			log.append("<li class='"+className+"'>"+str+"</li>");
			if(log.children("li").length > 8) {
				log.get(0).removeChild(log.children("li")[0]);
			}
		}
		function getTime() {
			var now= new Date(),
			h=now.getHours(),
			m=now.getMinutes(),
			s=now.getSeconds(),
			ms=now.getMilliseconds();
			return (h+":"+m+":"+s+ " " +ms);
		}

		function setTrigger() {
			var zTree = $.fn.zTree.getZTreeObj("treeDrag");
			zTree.setting.edit.drag.autoExpandTrigger = $("#callbackTrigger").attr("checked");
		}

		$(document).ready(function(){
			$.fn.zTree.init($("#treeDrag"), setting, treeNodes);
			$("#callbackTrigger").bind("change", {}, setTrigger);
		});
		//-->
</script>