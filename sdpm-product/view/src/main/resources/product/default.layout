#import("/org/tinygroup/button/components/button_smart.component")
#import("/org/tinygroup/button/components/button_common.component")
#import("/org/tinygroup/button/components/button.component")
#!set(activeTitle="产品管理",activeMenuId=currentPageId)
#include("/product/page/event/common.page")

<style>
    .btn-group #Dropdown {
        background: none;
        border: none;
        padding: 0 3px
    }

    .open #downMenuSty {
        min-width: 75px
    }
</style>
<script >
	function ajaxRead(ajaxType,opKey,opvalue){
		var selectCheck = "select[ajaxType='"+ajaxType+"']";
		$(selectCheck).each(function(){
				
				var sele = $(this);	
				$.ajax({
					type: "POST",
					url: "${TINY_CONTEXT_PATH}"+$(this).attr('url'),
				   	data: $(this).attr('data'),
				   	dataType:"json",
					success: function(data){
						for(var i=0,l=data.length;i<l;i++){
							var em = "<option value='"+data[i][opKey]+"'>"+ data[i][opvalue] +"</option>";
							sele.append(em);
							
						}
						if(sele.attr("multiple")!="multiple"){
							sele.val(data[0][opKey]).trigger("change");
						}						
						
						
					},
					error: function(res){
						alert("失败");
					}
				});
				
				
			});
			
	}
	
	
	$(function(){

#*#*	校验	*#
  $("form[name=thisform").Validform({
        tiptype:2,
        usePlugin:{
            //datepicker:{},//日期控件校验;
            passwordstrength:{
                minLen:6,//设置密码长度最小值，默认为0;
                maxLen:18,//设置密码长度最大值，默认为30;
                trigger:function(obj,error){
                    //该表单元素的keyup和blur事件会触发该函数的执行;
                    //obj:当前表单元素jquery对象;
                    //error:所设密码是否符合验证要求，验证不能通过error为true，验证通过则为false;
                    //console.log(error);
                    if(error){
                        obj.parent().find(".Validform_checktip").show();
                        obj.parent().find(".passwordStrength").hide();
                    }else{
                        obj.parent().find(".passwordStrength").show();
                    }
                }
            }
        },
	ajaxPost:true,
	beforeCheck:function(curform){
		//在表单提交执行验证之前执行的函数，curform参数是当前表单对象。
		//这里明确return false的话将不会继续执行验证操作;
	},
	beforeSubmit:function(curform){
		//在验证成功后，表单提交前执行的函数，curform参数是当前表单对象。
		//这里明确return false的话表单将不会提交;
	},
	callback:function(data){
		if(data.status=="y"){
			setTimeout(function(){
				$.Hidemsg(); //公用方法关闭信息提示框;显示方法是$.Showmsg("message goes here.");
			},2000);
		}
		//返回数据data是json对象，{"info":"demo info","status":"y"}
		//info: 输出提示信息;
		//status: 返回提交数据的状态,是否提交成功。如可以用"y"表示提交成功，"n"表示提交失败，在Validform_post.html文件返回数据里自定字符，主要用在callback函数里根据该值执行相应的回调操作;
		//你也可以在Validform_post.html文件返回更多信息在这里获取，进行相应操作；
		//ajax遇到服务端错误时也会执行回调，这时的data是{ status:**, statusText:**, readyState:**, responseText:** }；

		//这里执行回调操作;
		//注意：如果不是ajax方式提交表单，传入callback，这时data参数是当前表单对象，回调函数会在表单验证全部通过后执行，然后判断是否提交表单，如果callback里明确return false，则表单不会提交，如果return true或没有return，则会提交表单。
	}
    });
});*#
	
</script>


#@div()
    #@tabWithInit("top_demo" "optionsBox")

        #@div(divClass="dropdownBox")
            #include("/productLine/page/project/dropdownMenuline.page")
        #end

        #@div(divClass="dropdownBox")
            #include("/product/page/project/dropdownMenu.page")
        #end

        #@tabHead()

            #foreach(m in menuManager.getChildMenus("myproduct"))
            	#set(url=eval(m.href))
                #if(m.scope!="product-menu")
                
                    #@aHeadCol(TINY_CONTEXT_PATH+url linkName==m.id?"Current":"")${m.name}#end
                #end
            #end
        #*
                        #@aHeadCol(TINY_CONTEXT_PATH+"/product/page/project/togglebox.page?currentPageId="+currentPageId linkName=="demand"?"Current":"")需求#end

                        #@aHeadCol(TINY_CONTEXT_PATH+"/product/page/project/dymanicdata.page?currentPageId="+currentPageId  linkName=="dynamic"?"Current":"")动态#end

                        #@aHeadCol(TINY_CONTEXT_PATH+"/product/page/project/product-plan.page?currentPageId="+currentPageId  linkName=="plan"?"Current":"")计划#end

                        #@aHeadCol(TINY_CONTEXT_PATH+"/product/page/project/product-release.page?currentPageId="+currentPageId  linkName=="release"?"Current":"")发布#end

                        #@aHeadCol(TINY_CONTEXT_PATH+"/product/page/project/product-roadmap.page?currentPageId="+currentPageId  linkName=="roadmap"?"Current":"")路线图#end

                        #@aHeadCol(TINY_CONTEXT_PATH+"/product/page/project/archive-list.page?currentPageId="+currentPageId  linkName=="archive"?"Current":"")文档#end

                        #@aHeadCol(TINY_CONTEXT_PATH+"/product/page/project/product-project-list.page?currentPageId="+currentPageId  linkName=="project"?"Current":"")项目#end

                        #@aHeadCol(TINY_CONTEXT_PATH+"/product/page/project/product-modular.page?currentPageId="+currentPageId  linkName=="modular"?"Current":"")模块#end

                        #@aHeadCol(TINY_CONTEXT_PATH+"/product/page/project/overview.page?currentPageId="+currentPageId  linkName=="overview"?"Current":"")概况#end
                        *#
        #end

    <span class="r" style="position:relative;top:-28px;height:0">
        #foreach(m:menuManager.getScopeMenus("product-menu"))
            <a title="${m.name}" class="ml-5" href="${TINY_CONTEXT_PATH}${m.href}"><i class="${m.icon}">${m.name}</i></a>
        #end


    </span>
    #pageContent
    #end
#end

#@dialog("myModal")
    #@dialogHeader()对话框标题#end
    #@dialogBody()<p>对话框内容…</p>#end
    #@dialogFooter()
        #@buttonCancel()关闭#end
    #end
#end

<script type="text/javascript">
    $(function () {
        var timeid;
        $(".tabOption").find("li").each(function (index) {
            var sTab = $(this);
            sTab.mouseenter(function () {
                timeid = setTimeout(function () {
                    sTab.addClass("tabCurrent").siblings().removeClass("tabCurrent");
                    sTab.parent().siblings().find("ul:eq(" + index + ")").show().siblings().hide();
                }, 300);
            }).mouseleave(function () {
                clearTimeout(timeid);
            })
        })
    })
</script>

##JS代码全选和反选
<script type="text/javascript">

    function selectAllNullorReserve(obj, type) {
        if (obj != null && obj != "") {
            if (document.getElementsByName(obj) != undefined && document.getElementsByName(obj).length > 0) {	//getElementsByName函数的作用按名字查找对象，返回一个数组。
                var userids = document.getElementsByName(obj);
                if (type == "全选") {
                    for (var i = 0; i < userids.length; i++) {
                        if (userids[i].checked == false) {
                            userids[i].checked = true;
                        }
                    }
                } else if (type == "全不选") {
                    for (var i = 0; i < userids.length; i++) {
                        if (userids[i].checked == true) {
                            userids[i].checked = false;
                        }
                    }
                } else if (type == "反选") {
                    for (var i = 0; i < userids.length; i++) {
                        if (userids[i].checked == true) {
                            userids[i].checked = false;
                        } else {
                            userids[i].checked = true;
                        }
                    }
                }
            }
        }
    }
</script>



